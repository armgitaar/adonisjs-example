import Emittery from 'emittery';
import { Logger } from '@poppinss/fancy-logs';
/**
 * Exposes the API to start Node.js HTTP server as a child process. The
 * child process is full managed and cleans up when parent process
 * dies.
 */
export declare class HttpServer extends Emittery {
    private sourceFile;
    private projectRoot;
    private nodeArgs;
    private logger;
    private env;
    private childProcess;
    constructor(sourceFile: string, projectRoot: string, nodeArgs: string[], logger: Logger, env?: {
        [key: string]: string;
    });
    /**
     * Whether or not the underlying process is connected
     */
    get isConnected(): boolean;
    /**
     * Start the HTTP server as a child process.
     */
    start(): void;
    /**
     * Restart the server by killing the old one
     */
    restart(): void;
}
/**
 * A dummy implement of Http server to work as null object
 */
export declare class DummyHttpServer extends HttpServer {
    get isConnected(): boolean;
    start(): void;
    restart(): void;
}
