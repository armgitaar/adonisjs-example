"use strict";
/*
* @adonisjs/sink
*
* (c) Harminder Virk <virk@adonisjs.com>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const cp_file_1 = __importDefault(require("cp-file"));
const fs_1 = require("fs");
const logger_1 = require("../logger");
function copyFiles(sourceBaseDir, destinationBaseDir, files, options) {
    const overwrite = options ? options.overwrite : false;
    files.forEach((file) => {
        const absPath = path_1.join(sourceBaseDir, file);
        if (!fs_1.existsSync(absPath)) {
            throw new Error(`Missing source file ${absPath}`);
        }
        const targetAbsPath = path_1.join(destinationBaseDir, file);
        const hasTarget = fs_1.existsSync(targetAbsPath);
        if (hasTarget && !overwrite) {
            logger_1.logger.skip(file);
            return;
        }
        cp_file_1.default.sync(absPath, targetAbsPath, { overwrite: true });
        logger_1.logger.create(file);
    });
}
exports.copyFiles = copyFiles;
